@model BOL.Contact

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@if (TempData["Msg"] != null)
{
    <h3>@TempData["Msg"].ToString()</h3>
}
<span style="display:inline-block;font-size: 20px; margin:20px 0;padding : 20px; border: 1px solid #ff0000">



</span>
@ViewBag.Message

<div>
    @using (Html.BeginForm("Create", "CustomerService", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control  col-md-8" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message@*, htmlAttributes: new { @class = " col-md-2" }*@)
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @col = "20", @rows = "8" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="g-recaptcha" data-sitekey="6LezYMgZAAAAAGVEywRuwoA5AVrNXiSUiFce7NVI" data-callback="verifyCaptcha"></div>
                <div id="g-recaptcha-error"></div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" onclick="Confirm()" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>


<script>

    function confirm() {
        alert("Are you sure?");
        var response = grecaptcha.getResponse();
        if (response.length == 0) {
            document.getElementById('g-recaptcha-error').innerHTML = '<span style="color:red;">This field is required.</span>';
            return false;
        }
        return true;
    }

</script>

<script src="https://www.google.com/recaptcha/api.js" type="text/javascript"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

